// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  login     String   @unique
  name      String
  password  String
  role      Role     @default(USER)
  profile   Profile?
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id         Int        @id @default(autoincrement())
  user       User       @relation(fields: [userId], references: [id])
  userId     Int        @unique
  department Department @relation(fields: [depId], references: [id])
  depId      Int
  grade      Grade      @default(NURSE)
}

model Department {
  id            Int       @id @default(autoincrement())
  name          String
  wards         Ward[]
  numberOfSeats Int?      @default(0)
  engaged       Int?      @default(0) //Всего находиться в стационаре, накопительным (чел.) 
  free          Int?      @default(0) //Свободных коек
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  //to table
  planHuman     Int?      @default(0)
  planRub       Int?      @default(0)
  begAcc        Int?      @default(0)
  admRec        Int?      @default(0)
  //totalStays Int? //Всего находиться в стационаре, накопительным (чел.) 
  disCome       Int?      @default(0)
  disTax        Int?      @default(0)
  patOver       Int?      @default(0)
  storColed     Int?      @default(0)
  transHuman    Int?      @default(0)
  transRub      Int?      @default(0)
  medPrice      Int?      @default(0)
  dolgDead      Int?      @default(0)
  //freeBeds Int? //Свободных коек
  profile       Profile[]
}

model Ward {
  id            Int        @id @default(autoincrement())
  department    Department @relation(fields: [depId], references: [id])
  depId         Int
  number        Int        @unique
  numberOfSeats Int
  engaged       Int
  free          Int
  gender        Gender
  reserve       String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  status        Status @default(active)
}

enum Role {
  ADMIN
  TECHNICICAN
  SYSADMIN
  USER
}

enum Grade {
  NURSE       //медсестры - менять значения,
  HEADNURSE   //старшая медсестра - назначать, проверять
  DEPNURSTAFF //зам по среднему мед персоналу - менеджит койки/ создание/резерв по распоряжению
  CHIEFNURSE  //главная медсестра - менеджит койки/ создание/резерв по распоряжению
  TECHNICICAN //технический специалист
  CMO         //начмед - просто смотреть
}